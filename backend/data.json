[
  {
    "model": "accounts.customuser",
    "pk": 5,
    "fields": {
      "username": "admin",
      "first_name": "",
      "last_name": "",
      "email": "admin@gmail.com",
      "is_staff": true,
      "is_active": true,
      "is_superuser": true,
      "date_joined": "2025-06-26T16:52:38.636041+00:00",
      "last_login": "2025-07-08T14:52:49.936018+00:00"
    }
  },
  {
    "model": "accounts.customuser",
    "pk": 20,
    "fields": {
      "username": "hopin",
      "first_name": "",
      "last_name": "",
      "email": "hopin@gmail.com",
      "is_staff": false,
      "is_active": true,
      "is_superuser": false,
      "date_joined": "2025-07-08T20:38:19.976097+00:00",
      "last_login": null
    }
  },
  {
    "model": "accounts.customuser",
    "pk": 21,
    "fields": {
      "username": "out",
      "first_name": "",
      "last_name": "",
      "email": "out@gmail.com",
      "is_staff": false,
      "is_active": true,
      "is_superuser": false,
      "date_joined": "2025-07-08T23:29:27.366059+00:00",
      "last_login": null
    }
  },
  {
    "model": "accounts.quizquestion",
    "pk": 1,
    "fields": {
      "question": "1. What is Python?",
      "option_a": "A video game",
      "option_b": "A type of snake",
      "option_c": "A kind of robot",
      "option_d": "A programming language",
      "correct_answer": "",
      "difficulty": "",
      "lesson": 1
    }
  },
  {
    "model": "accounts.quizquestion",
    "pk": 6,
    "fields": {
      "question": "1. What is the output of print(2 * 3 + 1)?",
      "option_a": "7",
      "option_b": "8",
      "option_c": "6",
      "option_d": "9",
      "correct_answer": "",
      "difficulty": "",
      "lesson": 11
    }
  },
  {
    "model": "accounts.quizquestion",
    "pk": 11,
    "fields": {
      "question": "1. What does this code output?\r\n\r\nx = [1, 2, 3]\r\ny = x\r\ny.append(4)\r\nprint(x)",
      "option_a": "[1, 2, 3]",
      "option_b": "[1, 2, 3, 4]",
      "option_c": "[4]",
      "option_d": "Error",
      "correct_answer": "",
      "difficulty": "",
      "lesson": 9
    }
  },
  {
    "model": "accounts.quizquestion",
    "pk": 17,
    "fields": {
      "question": "1. What does HTML stand for?",
      "option_a": "Hyper Tool Markup Language",
      "option_b": "Home Tool Management Language",
      "option_c": "HyperText Markup Language",
      "option_d": "Hosting Tool Markup Language",
      "correct_answer": "",
      "difficulty": "",
      "lesson": 4
    }
  },
  {
    "model": "accounts.quizquestion",
    "pk": 24,
    "fields": {
      "question": "1. What is the main role of the frontend in a web application?",
      "option_a": "Running Python code",
      "option_b": "Managing databases",
      "option_c": "Displaying interfaces users interact with",
      "option_d": "Sending emails",
      "correct_answer": "",
      "difficulty": "",
      "lesson": 5
    }
  },
  {
    "model": "accounts.quizquestion",
    "pk": 29,
    "fields": {
      "question": "1. What does the command git pull origin main do?",
      "option_a": "Uploads your changes to the main branch",
      "option_b": "Deletes the main branch",
      "option_c": "Fetches changes from the remote and merges into your current branch",
      "option_d": "Pushes local changes to GitHub",
      "correct_answer": "",
      "difficulty": "",
      "lesson": 15
    }
  },
  {
    "model": "accounts.quizquestion",
    "pk": 34,
    "fields": {
      "question": "1. What is the output of this code?\r\nx = [1, 2, 3]\r\nprint(x[1])",
      "option_a": "1",
      "option_b": "2",
      "option_c": "3",
      "option_d": "0",
      "correct_answer": "",
      "difficulty": "",
      "lesson": 6
    }
  },
  {
    "model": "accounts.quizquestion",
    "pk": 39,
    "fields": {
      "question": "1. You are building a file upload feature that only allows files smaller than 5MB.\r\n\r\nWhat condition should you use?\r\nfile_size = 4.2  \r\nif ___________:\r\n    print(\"Upload allowed\")",
      "option_a": "file_size < 5",
      "option_b": "file_size <= 5.0",
      "option_c": "file_size == 5",
      "option_d": "Both A and B",
      "correct_answer": "",
      "difficulty": "",
      "lesson": 8
    }
  },
  {
    "model": "accounts.quizquestion",
    "pk": 44,
    "fields": {
      "question": "1. You’re writing a script to extract unique IP addresses from a log file.\r\ncode snippet:\r\nips = []\r\nwith open(\"access.log\") as f:\r\n    for line in f:\r\n        ip = line.split()[0]\r\n        if ip not in ips:\r\n            ips.append(ip)\r\nprint(len(ips))\r\n\r\nWhat’s a better alternative for performance if log file is large?",
      "option_a": "Use a dictionary",
      "option_b": "Use filter()",
      "option_c": "Use a list comprehension",
      "option_d": "Use a set",
      "correct_answer": "",
      "difficulty": "",
      "lesson": 7
    }
  },
  {
    "model": "accounts.quizquestion",
    "pk": 2,
    "fields": {
      "question": "2. Which of the following is a string?",
      "option_a": "23",
      "option_b": "True",
      "option_c": "int",
      "option_d": "\"Hello\"",
      "correct_answer": "",
      "difficulty": "",
      "lesson": 1
    }
  },
  {
    "model": "accounts.quizquestion",
    "pk": 7,
    "fields": {
      "question": "2. What is the output of this code?\r\nx = 5\r\nx = x + 3\r\nprint(x)",
      "option_a": "3",
      "option_b": "5",
      "option_c": "8",
      "option_d": "Error",
      "correct_answer": "",
      "difficulty": "",
      "lesson": 11
    }
  },
  {
    "model": "accounts.quizquestion",
    "pk": 12,
    "fields": {
      "question": "2. What is the output of the following code?\r\n\r\ndef greet(name):\r\n    return f\"Hello, {name}!\"\r\n\r\nprint(greet(\"CodeGrow\"))",
      "option_a": "Hello",
      "option_b": "greet(CodeGrow)",
      "option_c": "f\"Hello, CodeGrow!\"",
      "option_d": "Hello, CodeGrow",
      "correct_answer": "",
      "difficulty": "",
      "lesson": 9
    }
  },
  {
    "model": "accounts.quizquestion",
    "pk": 18,
    "fields": {
      "question": "2. What is the correct HTML tag for inserting a line break?",
      "option_a": "<br>",
      "option_b": "<lb>",
      "option_c": "<break>",
      "option_d": "<line>",
      "correct_answer": "",
      "difficulty": "",
      "lesson": 4
    }
  },
  {
    "model": "accounts.quizquestion",
    "pk": 25,
    "fields": {
      "question": "2. Which of the following is considered a frontend file?",
      "option_a": "index.html",
      "option_b": "models.py",
      "option_c": "views.py",
      "option_d": "settings.py",
      "correct_answer": "",
      "difficulty": "",
      "lesson": 5
    }
  },
  {
    "model": "accounts.quizquestion",
    "pk": 30,
    "fields": {
      "question": "2. What is the purpose of JSON Web Tokens (JWT) in modern web apps?",
      "option_a": "To authenticate users and maintain sessions without cookies.",
      "option_b": "To format database records",
      "option_c": "To transfer images between users",
      "option_d": "To create CSS animations",
      "correct_answer": "",
      "difficulty": "",
      "lesson": 15
    }
  },
  {
    "model": "accounts.quizquestion",
    "pk": 35,
    "fields": {
      "question": "2. You are building a shopping cart system. If the user’s total is over £100, they receive a 10% discount.\r\n\r\nWhat is the correct way to calculate the final price?\r\n\r\ntotal = 120\r\nif ____________:\r\n    total *= 0.9",
      "option_a": "total > 100",
      "option_b": "total = 100",
      "option_c": "total < 100",
      "option_d": "total != 100",
      "correct_answer": "",
      "difficulty": "",
      "lesson": 6
    }
  },
  {
    "model": "accounts.quizquestion",
    "pk": 40,
    "fields": {
      "question": "2. You want to create a username using the first letter of a user's first name and their full last name.\r\n\r\nfirst = \"Liam\"\r\nlast = \"Taylor\"\r\nusername = __________",
      "option_a": "first + last",
      "option_b": "first[0] + last",
      "option_c": "first[1] + last",
      "option_d": "last + first[0]",
      "correct_answer": "",
      "difficulty": "",
      "lesson": 8
    }
  },
  {
    "model": "accounts.quizquestion",
    "pk": 45,
    "fields": {
      "question": "2. You want to show a masked email for privacy like W***@gmail.com.\r\n\r\ndef mask_email(email):\r\n    return email[0] + \"***\" + email[email.index(\"@\"):]\r\n\r\nWhat is this function assuming about the input?",
      "option_a": "It’s lowercase",
      "option_b": "It includes @",
      "option_c": "It has a domain",
      "option_d": "It’s at least 3 characters",
      "correct_answer": "",
      "difficulty": "",
      "lesson": 7
    }
  },
  {
    "model": "accounts.quizquestion",
    "pk": 3,
    "fields": {
      "question": "3.Which keyword is used to define a function in Python?",
      "option_a": "function",
      "option_b": "def",
      "option_c": "define",
      "option_d": "func",
      "correct_answer": "",
      "difficulty": "",
      "lesson": 1
    }
  },
  {
    "model": "accounts.quizquestion",
    "pk": 8,
    "fields": {
      "question": "3. Which of these is a valid Python function definition?",
      "option_a": "function add(x, y):",
      "option_b": "define add(x, y):",
      "option_c": "def add(x, y)",
      "option_d": "def add(x, y):",
      "correct_answer": "",
      "difficulty": "",
      "lesson": 11
    }
  },
  {
    "model": "accounts.quizquestion",
    "pk": 13,
    "fields": {
      "question": "3. What is the output of this code?\r\n\r\ndef mystery(nums):\r\n    return [n**2 for n in nums if n % 2 == 0]\r\n\r\nprint(mystery([1, 2, 3, 4]))",
      "option_a": "[1, 4, 9, 16]",
      "option_b": "[4, 16]",
      "option_c": "[2, 4]",
      "option_d": "Error",
      "correct_answer": "",
      "difficulty": "",
      "lesson": 9
    }
  },
  {
    "model": "accounts.quizquestion",
    "pk": 14,
    "fields": {
      "question": "3. What is the output of this code?\r\n\r\ndef mystery(nums):\r\n    return [n**2 for n in nums if n % 2 == 0]\r\n\r\nprint(mystery([1, 2, 3, 4]))",
      "option_a": "[1, 4, 9, 16]",
      "option_b": "[4, 16]",
      "option_c": "[2, 4]",
      "option_d": "Error",
      "correct_answer": "",
      "difficulty": "",
      "lesson": 10
    }
  },
  {
    "model": "accounts.quizquestion",
    "pk": 19,
    "fields": {
      "question": "3. Which event occurs when a user clicks on an HTML element?",
      "option_a": "onload",
      "option_b": "onchange",
      "option_c": "onmouseover",
      "option_d": "onclick",
      "correct_answer": "",
      "difficulty": "",
      "lesson": 4
    }
  },
  {
    "model": "accounts.quizquestion",
    "pk": 26,
    "fields": {
      "question": "3. What is the purpose of Django's models py file",
      "option_a": "CSS styles",
      "option_b": "Define all data of Database",
      "option_c": "API routes",
      "option_d": "JavaScript functions",
      "correct_answer": "",
      "difficulty": "",
      "lesson": 5
    }
  },
  {
    "model": "accounts.quizquestion",
    "pk": 31,
    "fields": {
      "question": "3. Why would a developer use .env files in a Node or Django project?",
      "option_a": "To define frontend layouts",
      "option_b": "To store configuration like secrets, ports, or URLs",
      "option_c": "To declare color themes",
      "option_d": "To optimise CSS files",
      "correct_answer": "",
      "difficulty": "",
      "lesson": 15
    }
  },
  {
    "model": "accounts.quizquestion",
    "pk": 36,
    "fields": {
      "question": "3. You are writing a to-do list app. You want to show a message only if the list is empty.\r\n\r\nWhat should replace the blank?\r\n\r\ntasks = [ ]\r\nif ___________:\r\n    print(\"You have no tasks left!\")",
      "option_a": "len(tasks) > 0",
      "option_b": "tasks = []",
      "option_c": "not tasks",
      "option_d": "tasks.empty()",
      "correct_answer": "",
      "difficulty": "",
      "lesson": 6
    }
  },
  {
    "model": "accounts.quizquestion",
    "pk": 41,
    "fields": {
      "question": "3. You are building a function to reverse strings for a coding game.\r\n\r\ndef reverse_word(word):\r\n    return __________",
      "option_a": "word.reverse()",
      "option_b": "word.reverse()",
      "option_c": "word[: :-1]",
      "option_d": "word.sort()",
      "correct_answer": "",
      "difficulty": "",
      "lesson": 8
    }
  },
  {
    "model": "accounts.quizquestion",
    "pk": 46,
    "fields": {
      "question": "3. You want to reverse a dictionary: keys become values.\r\n\r\na = {\"x\": 1, \"y\": 2}\r\nb = {v: k for k, v in a.items()}",
      "option_a": "{\"x\":1, \"y\":2}",
      "option_b": "Error",
      "option_c": "1:\"x\", 2:\"y\"}",
      "option_d": "{1:1, 2:2}",
      "correct_answer": "",
      "difficulty": "",
      "lesson": 7
    }
  },
  {
    "model": "accounts.quizquestion",
    "pk": 4,
    "fields": {
      "question": "4. Which one is used to start a Python comment?",
      "option_a": "//",
      "option_b": "--",
      "option_c": "/* comment */",
      "option_d": "#",
      "correct_answer": "",
      "difficulty": "",
      "lesson": 1
    }
  },
  {
    "model": "accounts.quizquestion",
    "pk": 9,
    "fields": {
      "question": "4. Which loop is used to repeat a block of code a fixed number of times?",
      "option_a": "while",
      "option_b": "loop",
      "option_c": "for",
      "option_d": "repeat",
      "correct_answer": "",
      "difficulty": "",
      "lesson": 11
    }
  },
  {
    "model": "accounts.quizquestion",
    "pk": 15,
    "fields": {
      "question": "4. Which keyword is used to create a generator in Python?",
      "option_a": "yield",
      "option_b": "return",
      "option_c": "async",
      "option_d": "lambda",
      "correct_answer": "",
      "difficulty": "",
      "lesson": 9
    }
  },
  {
    "model": "accounts.quizquestion",
    "pk": 20,
    "fields": {
      "question": "4. What is GitHub used for?",
      "option_a": "Building websites",
      "option_b": "Editing images",
      "option_c": "Hosting and sharing code",
      "option_d": "Compiling C++ programs",
      "correct_answer": "",
      "difficulty": "",
      "lesson": 4
    }
  },
  {
    "model": "accounts.quizquestion",
    "pk": 27,
    "fields": {
      "question": "4. What is the correct order of flow when a user visits a URL in a Django project?",
      "option_a": "models → views → urls → template",
      "option_b": "template → views → models → urls",
      "option_c": "urls → models → views → template",
      "option_d": "urls → views → models → template",
      "correct_answer": "",
      "difficulty": "",
      "lesson": 5
    }
  },
  {
    "model": "accounts.quizquestion",
    "pk": 32,
    "fields": {
      "question": "4. What is the difference between OAuth and JWT?",
      "option_a": "They are the same",
      "option_b": "OAuth is a protocol for authorisation, JWT is a token format",
      "option_c": "OAuth is for CSS, JWT is for JS",
      "option_d": "OAuth is a UI framework, JWT is an animation tool",
      "correct_answer": "",
      "difficulty": "",
      "lesson": 15
    }
  },
  {
    "model": "accounts.quizquestion",
    "pk": 37,
    "fields": {
      "question": "4. You’re validating emails for a newsletter signup. You want to check if \"@\" is in the email string.\r\n\r\nWhat is the correct condition?\r\nemail = \"test@example.com\"\r\nif ___________:\r\n    print(\"Valid email\")",
      "option_a": "email.contains(\"@\")",
      "option_b": "email == \"@\"",
      "option_c": "email.has(\"@\")",
      "option_d": "\"@\" in email",
      "correct_answer": "",
      "difficulty": "",
      "lesson": 6
    }
  },
  {
    "model": "accounts.quizquestion",
    "pk": 42,
    "fields": {
      "question": "4. You are asked to write a function that adds the digits of a number.\r\n\r\nWhat does this print?\r\n\r\n\r\ndef sum_digits(n):\r\n    return sum([int(d) for d in str(n)])\r\n\r\nprint(sum_digits(123))",
      "option_a": "Error",
      "option_b": "3",
      "option_c": "6",
      "option_d": "123",
      "correct_answer": "",
      "difficulty": "",
      "lesson": 8
    }
  },
  {
    "model": "accounts.quizquestion",
    "pk": 47,
    "fields": {
      "question": "4. You receive a list of IPs from a user’s log history. You want to remove duplicates but keep their first appearance in order.\r\n\r\nips = [3, 1, 3, 2, 2, 4]\r\nseen = set()\r\nunique = [ip for ip in ips if ip not in seen and not seen.add(ip)]\r\nprint(unique)",
      "option_a": "[3, 1, 2, 4]",
      "option_b": "[3, 1, 3, 2, 2, 4]",
      "option_c": "{3, 1, 2, 4}",
      "option_d": "Error",
      "correct_answer": "",
      "difficulty": "",
      "lesson": 7
    }
  },
  {
    "model": "accounts.quizquestion",
    "pk": 5,
    "fields": {
      "question": "5. How do you display something on the screen?",
      "option_a": "say()",
      "option_b": "display()",
      "option_c": "print()",
      "option_d": "show()",
      "correct_answer": "",
      "difficulty": "",
      "lesson": 1
    }
  },
  {
    "model": "accounts.quizquestion",
    "pk": 10,
    "fields": {
      "question": "5. What will this code print?\r\nfor i in range(3):\r\nprint(i)",
      "option_a": "1 2 3",
      "option_b": "0 1 2",
      "option_c": "0 1 2 3",
      "option_d": "Error",
      "correct_answer": "",
      "difficulty": "",
      "lesson": 11
    }
  },
  {
    "model": "accounts.quizquestion",
    "pk": 16,
    "fields": {
      "question": "5. What is the output of this code?\r\n\r\ndef factorial(n):\r\n    if n == 0:\r\n        return 1\r\n    else:\r\n        return n * factorial(n - 1)\r\n\r\nprint(factorial(4))",
      "option_a": "10",
      "option_b": "24",
      "option_c": "12",
      "option_d": "16",
      "correct_answer": "",
      "difficulty": "",
      "lesson": 9
    }
  },
  {
    "model": "accounts.quizquestion",
    "pk": 22,
    "fields": {
      "question": "5. What does git init do?",
      "option_a": "Uploads code to GitHub",
      "option_b": "Creates a new Git repository",
      "option_c": "Installs Git",
      "option_d": "Clones a repository",
      "correct_answer": "",
      "difficulty": "",
      "lesson": 4
    }
  },
  {
    "model": "accounts.quizquestion",
    "pk": 28,
    "fields": {
      "question": "5. What is the purpose of .gitignore?",
      "option_a": "To ignore typos",
      "option_b": "To hide your password",
      "option_c": "To prevent certain files from being tracked by Git",
      "option_d": "To protect files from viruses",
      "correct_answer": "",
      "difficulty": "",
      "lesson": 5
    }
  },
  {
    "model": "accounts.quizquestion",
    "pk": 33,
    "fields": {
      "question": "5. In token-based authentication, why is it recommended to send tokens in the Authorization header rather than in the query string?",
      "option_a": "It makes URLs shorter",
      "option_b": "Query strings are logged and exposed more easily",
      "option_c": "Headers are always encrypted",
      "option_d": "Browsers block query strings",
      "correct_answer": "",
      "difficulty": "",
      "lesson": 15
    }
  },
  {
    "model": "accounts.quizquestion",
    "pk": 38,
    "fields": {
      "question": "5. You're building a task tracker that updates task status. Each task is stored as a dictionary.\r\n\r\nHow do you mark a task as complete?\r\n\r\ntask = {\"title\": \"Fix bug\", \"completed\": False}",
      "option_a": "task[\"completed\"] = \"yes\"",
      "option_b": "task[\"completed\"] = True",
      "option_c": "task[\"done\"] = True",
      "option_d": "task.completed = True",
      "correct_answer": "",
      "difficulty": "",
      "lesson": 6
    }
  },
  {
    "model": "accounts.quizquestion",
    "pk": 43,
    "fields": {
      "question": "5. Your registration system needs to reject passwords shorter than 8 characters.\r\n\r\nWhat will this print?\r\n\r\n'password = \"hello123\"\r\nif len(password) < 8:\r\n    print(\"Too short\")\r\nelse:\r\n    print(\"Valid\")",
      "option_a": "hello123",
      "option_b": "Error",
      "option_c": "Too short",
      "option_d": "Valid",
      "correct_answer": "",
      "difficulty": "",
      "lesson": 8
    }
  },
  {
    "model": "accounts.quizquestion",
    "pk": 48,
    "fields": {
      "question": "5. You want to read user input until \"stop\" is entered:\r\n\r\ntotal = 0\r\nwhile (val := input()) != \"stop\":\r\n    total += int(val)\r\nprint(total)\r\n\r\nWhat does this do?",
      "option_a": "Error",
      "option_b": "Infinite loop",
      "option_c": "Adds up letters",
      "option_d": "Sum inputs until user types “stop”",
      "correct_answer": "",
      "difficulty": "",
      "lesson": 7
    }
  },
  {
    "model": "accounts.userprogress",
    "pk": 5,
    "fields": {
      "user": 5,
      "lesson": null,
      "completed": false,
      "score": 0
    }
  },
  {
    "model": "accounts.userprogress",
    "pk": 20,
    "fields": {
      "user": 20,
      "lesson": null,
      "completed": false,
      "score": 0
    }
  },
  {
    "model": "accounts.userprogress",
    "pk": 21,
    "fields": {
      "user": 21,
      "lesson": null,
      "completed": false,
      "score": 0
    }
  }
]